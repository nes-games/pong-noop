Playfield {
	
	$TOP : 16
	$BOTTOM : PPU.$SCREEN_HEIGHT_PX - 16
	$LEFT : 8
	$RIGHT : PPU.$SCREEN_WIDTH_PX - 8
	
	$TILE_OFF : 0
	$TILE_ON : 1
	
	$attrTable @CHR-ROM : Byte[8][8]
	
	paddle1 : Paddle{ number : 1 }
	paddle2 : Paddle{ number : 2 }
	ball : Ball
	
	score1 : 0
	score2 : 0
	
	reset() {
		score1 := 0
		score2 := 0
		
		_resetBallAndPaddles		
	}
	
	_resetBallAndPaddles() {
		ball.x := ($LEFT + $RIGHT) / 2 - Ball.$WIDTH_PX / 2 
		ball.y := ($TOP + $BOTTOM) / 2 - Ball.$HEIGHT_PX / 2
		ball.speedX := 0
		ball.speedY := 0
		ball.out := false
		
		paddle1.x := $LEFT
		paddle1.y := ($TOP + $BOTTOM / 2) - Paddle.$HEIGHT_PX / 2
		paddle1.direction := 0
		
		paddle2.x := $RIGHT - Paddle.$WIDTH_PX 
		paddle2.y := ($TOP + $BOTTOM / 2) - Paddle.$HEIGHT_PX / 2
		paddle2.direction := 0
	}
	
	restart() {
		_resetBallAndPaddles
		_drawBallAndPaddles
	}
	
	draw() {
		PPU.$hideBackground
		PPU.$hideSprites
		PPU.$update
		
		PPU.$setBackgroundPalettes(Pong.$palettes)
		PPU.$setSpritesPalettes(Pong.$palettes)
		
		// clear screen
		for (row : 0; row < PPU.$SCREEN_HEIGHT_TILES; ++row) {
			for (col : 0; col < PPU.$SCREEN_WIDTH_TILES; ++col) {
				PPU.$drawBackgroundTile(PPU.$SCREEN_TOP_LEFT, row, col, $TILE_OFF)
			}
		}
		
		// top and bottom borders
		for (col : 0; col < PPU.$SCREEN_WIDTH_TILES; ++col) {
			PPU.$drawBackgroundTile(PPU.$SCREEN_TOP_LEFT, 1, col, $TILE_ON)
			PPU.$drawBackgroundTile(PPU.$SCREEN_TOP_LEFT, $BOTTOM / 8, col, $TILE_ON)
		}
		
		// middle line
		for (row : $TOP / 8; row < Playfield.$BOTTOM / 8; ++row) {
			PPU.$drawBackgroundTile(PPU.$SCREEN_TOP_LEFT, row, PPU.$SCREEN_WIDTH_TILES / 2 - 1, 2)
			PPU.$drawBackgroundTile(PPU.$SCREEN_TOP_LEFT, row, PPU.$SCREEN_WIDTH_TILES / 2, 3)
		}
		
		PPU.$paintBackground(PPU.$SCREEN_TOP_LEFT, $attrTable)
		
		drawScore1
		drawScore2
		
		_drawBallAndPaddles
		
		PPU.$waitVBlank
		PPU.$showBackground
		PPU.$showSprites
		PPU.$update
	}
	
	_drawBallAndPaddles() {
		ball.draw
		paddle1.draw
		paddle2.draw
	}
	
	drawScore1() {
		_drawDigit(1, 56, score1)
	}
	
	drawScore2() {
		_drawDigit(3, 192, score2)
	}
	
	_drawDigit(Byte pos, Byte xOffset, Byte digit) {
		pos := 10 + (pos * 13) 
		
		// draws an 8 using a 5x3 table of tiles
		// 1st line
		PPU.$drawSprite(pos + 0, xOffset + 00, 24, $TILE_ON, 0)
		PPU.$drawSprite(pos + 1, xOffset + 08, 24, $TILE_ON, 0)
		PPU.$drawSprite(pos + 2, xOffset + 16, 24, $TILE_ON, 0)
		// 2nd line
		PPU.$drawSprite(pos + 3, xOffset + 00, 32, $TILE_ON, 0)
		PPU.$drawSprite(pos + 4, xOffset + 16, 32, $TILE_ON, 0)
		// 3rd line
		PPU.$drawSprite(pos + 5, xOffset + 00, 40, $TILE_ON, 0)
		PPU.$drawSprite(pos + 6, xOffset + 08, 40, $TILE_ON, 0)
		PPU.$drawSprite(pos + 7, xOffset + 16, 40, $TILE_ON, 0)
		// 4th line
		PPU.$drawSprite(pos + 8, xOffset + 00, 48, $TILE_ON, 0)
		PPU.$drawSprite(pos + 9, xOffset + 16, 48, $TILE_ON, 0)
		// 5th line
		PPU.$drawSprite(pos + 10, xOffset + 00, 56, $TILE_ON, 0)
		PPU.$drawSprite(pos + 11, xOffset + 08, 56, $TILE_ON, 0)
		PPU.$drawSprite(pos + 12, xOffset + 16, 56, $TILE_ON, 0)

		//derivates all from 8

		if (digit = 0) {
			// 3rd line
			PPU.$drawSprite(pos + 6, xOffset + 08, 40, $TILE_OFF, 0)
		} else if (digit = 1) {
			// 1st line
			PPU.$drawSprite(pos + 0, xOffset + 00, 24, $TILE_OFF, 0)
			PPU.$drawSprite(pos + 1, xOffset + 08, 24, $TILE_OFF, 0)
			// 2nd line
			PPU.$drawSprite(pos + 3, xOffset + 00, 32, $TILE_OFF, 0)
			// 3rd line
			PPU.$drawSprite(pos + 5, xOffset + 00, 40, $TILE_OFF, 0)
			PPU.$drawSprite(pos + 6, xOffset + 08, 40, $TILE_OFF, 0)
			// 4th line
			PPU.$drawSprite(pos + 8, xOffset + 00, 48, $TILE_OFF, 0)
			// 5th line
			PPU.$drawSprite(pos + 10, xOffset + 00, 56, $TILE_OFF, 0)
			PPU.$drawSprite(pos + 11, xOffset + 08, 56, $TILE_OFF, 0)
		} else if (digit = 2) {
			// 2nd line
			PPU.$drawSprite(pos + 3, xOffset + 00, 32, $TILE_OFF, 0)
			// 4th line
			PPU.$drawSprite(pos + 9, xOffset + 16, 48, $TILE_OFF, 0)
		} else if (digit = 3) {
			// 2nd line
			PPU.$drawSprite(pos + 3, xOffset + 00, 32, $TILE_OFF, 0)
			// 3rd line
			PPU.$drawSprite(pos + 5, xOffset + 00, 40, $TILE_OFF, 0)
			// 4th line
			PPU.$drawSprite(pos + 8, xOffset + 00, 48, $TILE_OFF, 0)
		} else if (digit = 4) {
			// 1st line
			PPU.$drawSprite(pos + 1, xOffset + 08, 24, $TILE_OFF, 0)
			// 4th line
			PPU.$drawSprite(pos + 8, xOffset + 00, 48, $TILE_OFF, 0)
			// 5th line
			PPU.$drawSprite(pos + 10, xOffset + 00, 56, $TILE_OFF, 0)
			PPU.$drawSprite(pos + 11, xOffset + 08, 56, $TILE_OFF, 0)
		} else if (digit = 5) {
			// 2nd line
			PPU.$drawSprite(pos + 4, xOffset + 16, 32, $TILE_OFF, 0)
			// 4th line
			PPU.$drawSprite(pos + 8, xOffset + 00, 48, $TILE_OFF, 0)
		} else if (digit = 6) {
			// 2nd line
			PPU.$drawSprite(pos + 4, xOffset + 16, 32, $TILE_OFF, 0)
		} else if (digit = 7) {
			// 2nd line
			PPU.$drawSprite(pos + 3, xOffset + 00, 32, $TILE_OFF, 0)
			// 3rd line
			PPU.$drawSprite(pos + 5, xOffset + 00, 40, $TILE_OFF, 0)
			PPU.$drawSprite(pos + 7, xOffset + 16, 40, $TILE_OFF, 0)
			// 4th line
			PPU.$drawSprite(pos + 9, xOffset + 16, 48, $TILE_OFF, 0)
			// 5th line
			PPU.$drawSprite(pos + 11, xOffset + 08, 56, $TILE_OFF, 0)
			PPU.$drawSprite(pos + 12, xOffset + 16, 56, $TILE_OFF, 0)
		} else if (digit = 9) {
			// 4th line
			PPU.$drawSprite(pos + 8, xOffset + 00, 48, $TILE_OFF, 0)
		} else if (digit = 10) {
			// 5th line
			PPU.$drawSprite(pos + 11, xOffset + 08, 56, $TILE_OFF, 0)
		} else if (digit = 11) {
			// 3rd line
			PPU.$drawSprite(pos + 7, xOffset + 16, 40, $TILE_OFF, 0)
		} else if (digit = 12) {
			// 2nd line
			PPU.$drawSprite(pos + 4, xOffset + 16, 32, $TILE_OFF, 0)
			// 3rd line
			PPU.$drawSprite(pos + 6, xOffset + 08, 40, $TILE_OFF, 0)
			PPU.$drawSprite(pos + 7, xOffset + 16, 40, $TILE_OFF, 0)
			// 4th line
			PPU.$drawSprite(pos + 9, xOffset + 16, 48, $TILE_OFF, 0)
		} else if (digit = 13) {
			// 1st line
			PPU.$drawSprite(pos + 2, xOffset + 16, 24, $TILE_OFF, 0)
			// 3rd line
			PPU.$drawSprite(pos + 6, xOffset + 08, 40, $TILE_OFF, 0)
			// 5th line
			PPU.$drawSprite(pos + 12, xOffset + 16, 56, $TILE_OFF, 0)
		} else if (digit = 14) {
			// 2nd line
			PPU.$drawSprite(pos + 4, xOffset + 16, 32, $TILE_OFF, 0)
			// 3rd line
			PPU.$drawSprite(pos + 7, xOffset + 16, 40, $TILE_OFF, 0)
			// 4th line
			PPU.$drawSprite(pos + 9, xOffset + 16, 48, $TILE_OFF, 0)
		} else if (digit = 15) {
			// 2nd line
			PPU.$drawSprite(pos + 4, xOffset + 16, 32, $TILE_OFF, 0)
			// 3rd line
			PPU.$drawSprite(pos + 7, xOffset + 16, 40, $TILE_OFF, 0)
			// 4th line
			PPU.$drawSprite(pos + 9, xOffset + 16, 48, $TILE_OFF, 0)
			// 5th line
			PPU.$drawSprite(pos + 11, xOffset + 08, 56, $TILE_OFF, 0)
			PPU.$drawSprite(pos + 12, xOffset + 16, 56, $TILE_OFF, 0)
		}
	}
}